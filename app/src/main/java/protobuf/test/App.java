/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package protobuf.test;

import com.zddhub.proto.Message;
import com.zddhub.proto.Author;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) throws IOException {
        test_message();
        test_author();
    }

    public static void test_message() throws IOException {
        Message test1 = Message.newBuilder()
                .setId(27)
                .setStr("Hello World")
                .addArrays(1)
                .addArrays(2)
                .setAnswer(Message.Answer.NO)
                .setInnerMessage(
                        Message.InnerMessage.newBuilder()
                                .setTestFloat(11.24f)
                                .build()
                )
                .setIsTrue(false)
                .setMaxFieldNumber(18)
                .build();

        System.out.println("Output directory" + Paths.get("..").toAbsolutePath());
        System.out.println(test1.toString());

        FileOutputStream output = new FileOutputStream(Paths.get("..", "output-message").toString());

        output.write(test1.toByteArray());
        output.close();

        FileInputStream input = new FileInputStream(Paths.get("..", "output-message").toString());
        Message test2 =  Message.parseFrom(input);
        input.close();
        System.out.println(test2.toString());
    }

    public static void test_author() throws IOException {
        Author author = Author.newBuilder()
                .setName("zddhub")
                .setAge(18)
                .setBlog("https://zddhub.com")
                .setIncome(18.125)
                .build();

        System.out.println("Output directory" + Paths.get("..").toAbsolutePath());
        System.out.println(author.toString());

        FileOutputStream output = new FileOutputStream(Paths.get("..", "output-author").toString());

        output.write(author.toByteArray());
        output.close();

        FileInputStream input = new FileInputStream(Paths.get("..", "output-author").toString());
        Author author2 =  Author.parseFrom(input);
        input.close();
        System.out.println(author2.toString());
    }
}
